<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= name %> - Mobile Recharge & Payment Platform</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
      :root {
        --primary: #4f46e5;
        --primary-dark: #4338ca;
        --secondary: #0ea5e9;
        --accent: #8b5cf6;
      }

      body {
        font-family: "Inter", sans-serif;
        background-color: #f9fafb;
      }

      .primary-gradient {
        background: linear-gradient(
          135deg,
          var(--primary) 0%,
          var(--secondary) 100%
        );
      }

      .secondary-gradient {
        background: linear-gradient(
          135deg,
          var(--accent) 0%,
          var(--secondary) 100%
        );
      }

      .card-hover {
        transition: all 0.3s ease;
      }

      .card-hover:hover {
        transform: translateY(-8px);
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
          0 10px 10px -5px rgba(0, 0, 0, 0.04);
      }

      .app-mockup {
        position: relative;
        width: 280px;
        height: 560px;
        border-radius: 40px;
        box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
        overflow: hidden;
      }

      .app-screen {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: #fff;
        overflow: hidden;
      }

      .app-notch {
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 150px;
        height: 30px;
        background: #000;
        border-bottom-left-radius: 15px;
        border-bottom-right-radius: 15px;
        z-index: 10;
      }

      @keyframes float {
        0%,
        100% {
          transform: translateY(0);
        }
        50% {
          transform: translateY(-10px);
        }
      }

      .float-animation {
        animation: float 6s ease-in-out infinite;
      }

      @keyframes pulse {
        0%,
        100% {
          opacity: 1;
        }
        50% {
          opacity: 0.7;
        }
      }

      .pulse-animation {
        animation: pulse 2s infinite;
      }

      .service-icon {
        transition: all 0.3s ease;
      }

      .card-hover:hover .service-icon {
        transform: scale(1.1);
      }

      .custom-scrollbar::-webkit-scrollbar {
        width: 6px;
      }

      .custom-scrollbar::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
      }

      .custom-scrollbar::-webkit-scrollbar-thumb {
        background: #c7d2fe;
        border-radius: 10px;
      }

      .custom-scrollbar::-webkit-scrollbar-thumb:hover {
        background: #a5b4fc;
      }

      .feature-card {
        transition: all 0.3s ease;
      }

      .feature-card:hover {
        transform: translateY(-5px);
      }

      .feature-icon {
        transition: all 0.3s ease;
      }

      .feature-card:hover .feature-icon {
        transform: scale(1.1) rotate(10deg);
      }

      /* About */
      .gradient-bg {
        background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
      }
      .gradient-text {
        background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
      }
      .team-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
          0 4px 6px -2px rgba(0, 0, 0, 0.05);
      }
      .stat-card {
        transition: all 0.3s ease;
      }
      .stat-card:hover {
        transform: translateY(-5px);
      }
      .timeline-dot {
        width: 20px;
        height: 20px;
        border-radius: 50%;
        background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
        position: absolute;
        left: -10px;
        top: 0;
      }
      .timeline-line {
        position: absolute;
        left: 0;
        top: 20px;
        bottom: 0;
        width: 1px;
        background-color: #e5e7eb;
      }
    </style>
  </head>
  <body>
    <!-- Signup Section -->
    <div class="flex-grow flex items-center justify-center px-4 py-12">
      <div class="w-full max-w-lg">
        <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
          <!-- Signup Header -->
          <div class="gradient-bg px-6 py-8 text-center">
            <div
              class="bg-white/20 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-8 w-8 text-white"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"
                />
              </svg>
            </div>
            <h2 class="text-2xl font-bold text-white">Create an Account</h2>
            <p class="text-indigo-100 mt-1">
              Join QuickTopup for fast and secure transactions
            </p>
          </div>

          <!-- Signup Form -->
          <div class="px-6 py-8">
            <form id="signupForm" method="post">
              <div class="space-y-5">
                <div>
                  <label
                    for="fullname"
                    class="block text-sm font-medium text-gray-700 mb-1"
                    >Full Name</label
                  >
                  <input
                    onchange="handleChange(event)"
                    type="text"
                    id="fullname"
                    name="fullname"
                    class="w-full px-4 py-3 rounded-lg border border-gray-300 input-focus focus:outline-none"
                    placeholder="Enter your full name"
                    required
                  />
                </div>

                <div>
                  <label
                    for="email"
                    class="block text-sm font-medium text-gray-700 mb-1"
                    >Email Address</label
                  >
                  <input
                    onchange="handleChange(event)"
                    type="email"
                    id="email"
                    name="email"
                    class="w-full px-4 py-3 rounded-lg border border-gray-300 input-focus focus:outline-none"
                    placeholder="Enter your email"
                    required
                  />
                </div>

                <div>
                  <label
                    for="phone"
                    class="block text-sm font-medium text-gray-700 mb-1"
                    >Phone Number</label
                  >
                  <div class="flex">
                    <div class="relative">
                      <select
                        onchange="handleChange(event)"
                        id="countryCode"
                        name="countryCode"
                        class="appearance-none rounded-l-lg border border-gray-300 bg-gray-50 py-3 pl-3 pr-8 input-focus focus:outline-none"
                      >
                        <option value="+234">+234</option>
                      </select>
                      <div
                        class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700"
                      >
                        <svg
                          class="h-4 w-4"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M19 9l-7 7-7-7"
                          ></path>
                        </svg>
                      </div>
                    </div>
                    <input
                      onchange="handleChange(event)"
                      type="tel"
                      id="phone"
                      name="phone"
                      class="w-full rounded-r-lg border border-gray-300 border-l-0 px-4 py-3 input-focus focus:outline-none"
                      placeholder="Enter your phone number"
                      required
                    />
                  </div>
                </div>

                <div>
                  <label
                    for="password"
                    class="block text-sm font-medium text-gray-700 mb-1"
                    >Password</label
                  >
                  <div class="relative">
                    <input
                      onchange="handleChange(event)"
                      type="password"
                      id="password"
                      name="password"
                      class="w-full px-4 py-3 rounded-lg border border-gray-300 input-focus focus:outline-none"
                      placeholder="Create a strong password"
                      required
                    />
                    <button
                      type="button"
                      id="togglePassword"
                      class="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-5 w-5"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                        id="eyeIcon"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                        />
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                        />
                      </svg>
                    </button>
                  </div>

                  <!-- Password Strength Indicator -->
                  <div class="mt-2">
                    <div class="flex justify-between mb-1">
                      <span class="text-xs text-gray-500"
                        >Password Strength:</span
                      >
                      <span id="strengthText" class="text-xs font-medium"
                        >None</span
                      >
                    </div>
                    <div class="w-full bg-gray-200 rounded-full h-1">
                      <div
                        id="strengthBar"
                        class="password-strength bg-gray-300 rounded-full"
                        style="width: 0%"
                      ></div>
                    </div>
                    <div class="mt-1 text-xs text-gray-500">
                      Use 8+ characters with a mix of letters, numbers & symbols
                    </div>
                  </div>
                </div>

                <!-- <div class="flex items-start">
                  <div class="flex items-center h-5">
                    <input
                      id="terms"
                      name="terms"
                      type="checkbox"
                      class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded"
                      required
                    />
                  </div>
                  <div class="ml-3 text-sm">
                    <label for="terms" class="text-gray-600"
                      >I agree to the
                      <a href="#" class="text-indigo-600 hover:text-indigo-800"
                        >Terms of Service</a
                      >
                      and
                      <a href="#" class="text-indigo-600 hover:text-indigo-800"
                        >Privacy Policy</a
                      ></label
                    >
                  </div>
                </div> -->

                <div>
                  <button
                    type="submit"
                    class="w-full bg-indigo-600 text-white py-3 rounded-lg font-medium hover:bg-indigo-700 transition-colors"
                  >
                    Create Account
                  </button>
                </div>
              </div>
            </form>

            <div class="mt-6">
              <div class="relative">
                <div class="absolute inset-0 flex items-center">
                  <div class="w-full border-t border-gray-300"></div>
                </div>
                <div class="relative flex justify-center text-sm">
                  <span class="px-2 bg-white text-gray-500"
                    >Or sign up with</span
                  >
                </div>
              </div>

              <div class="mt-6 grid grid-cols-2 gap-3">
                <button
                  type="button"
                  class="flex justify-center items-center py-2.5 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
                >
                  <svg
                    class="h-5 w-5 mr-2"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"
                      fill="#4285F4"
                    />
                    <path
                      d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"
                      fill="#34A853"
                    />
                    <path
                      d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l3.66-2.84z"
                      fill="#FBBC05"
                    />
                    <path
                      d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"
                      fill="#EA4335"
                    />
                  </svg>
                  Google
                </button>
                <button
                  type="button"
                  class="flex justify-center items-center py-2.5 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
                >
                  <svg
                    class="h-5 w-5 mr-2 text-[#1877F2]"
                    fill="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"
                    />
                  </svg>
                  Facebook
                </button>
              </div>
            </div>

            <div class="mt-6 text-center">
              <p class="text-sm text-gray-600">
                Already have an account?
                <a
                  href="/login"
                  class="text-indigo-600 hover:text-indigo-800 font-medium"
                  >Login</a
                >
              </p>
            </div>
          </div>
        </div>

        <!-- Security Note -->
        <div
          class="mt-6 flex items-center justify-center text-sm text-gray-500"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-4 w-4 mr-1 text-green-500"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"
            />
          </svg>
          <span>Your data is encrypted and secure</span>
        </div>
      </div>
    </div>
    <!-- Success Modal -->
    <div
      id="successModal"
      class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center hidden"
    >
      <div class="bg-white rounded-xl p-6 w-full max-w-md mx-4 text-center">
        <div class="mb-4">
          <div
            class="mx-auto w-16 h-16 bg-green-100 rounded-full flex items-center justify-center"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-10 w-10 text-green-500"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M5 13l4 4L19 7"
              />
            </svg>
          </div>
        </div>
        <h3 class="text-xl font-semibold text-gray-800 mb-2">
          Account Created Successfully!
        </h3>
        <p class="text-gray-600 mb-6">
          This is a demo signup page. In a real application, you would receive a
          verification email and be redirected to complete your profile.
        </p>
        <button
          id="closeSuccessModal"
          class="w-full bg-indigo-600 text-white py-3 rounded-lg font-medium hover:bg-indigo-700 transition-colors"
        >
          Close
        </button>
      </div>
    </div>

    <script>
      // Toggle password visibility
      const togglePassword = document.getElementById("togglePassword");
      const password = document.getElementById("password");
      const eyeIcon = document.getElementById("eyeIcon");

      togglePassword.addEventListener("click", function () {
        const type =
          password.getAttribute("type") === "password" ? "text" : "password";
        password.setAttribute("type", type);

        if (type === "text") {
          eyeIcon.innerHTML = `
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21" />
                `;
        } else {
          eyeIcon.innerHTML = `
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                `;
        }
      });

      // Password strength indicator
      const strengthBar = document.getElementById("strengthBar");
      const strengthText = document.getElementById("strengthText");

      password.addEventListener("input", function () {
        const value = password.value;
        let strength = 0;
        let color = "bg-gray-300";
        let text = "None";

        if (value.length > 0) {
          // Length check
          if (value.length >= 8) {
            strength += 25;
          }

          // Lowercase letters check
          if (/[a-z]/.test(value)) {
            strength += 25;
          }

          // Uppercase letters check
          if (/[A-Z]/.test(value)) {
            strength += 25;
          }

          // Numbers and special characters check
          if (/[0-9]/.test(value) || /[^A-Za-z0-9]/.test(value)) {
            strength += 25;
          }

          // Set color and text based on strength
          if (strength <= 25) {
            color = "bg-red-500";
            text = "Weak";
          } else if (strength <= 50) {
            color = "bg-orange-500";
            text = "Fair";
          } else if (strength <= 75) {
            color = "bg-yellow-500";
            text = "Good";
          } else {
            color = "bg-green-500";
            text = "Strong";
          }
        }

        // Update the strength bar
        strengthBar.className = `password-strength ${color} rounded-full`;
        strengthBar.style.width = `${strength}%`;
        strengthText.textContent = text;

        // Update text color to match bar
        if (color === "bg-gray-300") {
          strengthText.className = "text-xs font-medium text-gray-500";
        } else if (color === "bg-red-500") {
          strengthText.className = "text-xs font-medium text-red-500";
        } else if (color === "bg-orange-500") {
          strengthText.className = "text-xs font-medium text-orange-500";
        } else if (color === "bg-yellow-500") {
          strengthText.className = "text-xs font-medium text-yellow-500";
        } else {
          strengthText.className = "text-xs font-medium text-green-500";
        }
      });

      // Form submission
      const signupForm = document.getElementById("signupForm");
      const successModal = document.getElementById("successModal");
      const closeSuccessModal = document.getElementById("closeSuccessModal");
      const values = {
        fullname: "",
        email: "",
        phone: "",
        countryCode: "+234",
        password: "",
        terms: false,
      };
      const handleChange = ({ target }) => {
        values[target.name] = target.value;
        console.log(values);
      };
      signupForm.addEventListener("submit", function (e) {
        e.preventDefault();
        fetch("/signup/", {
          method: "POST",
          body: JSON.stringify(values),
          headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
          },
        }).then((res) => {
          if (!res.ok) throw new Error("Failed to send message");
          return res.json();
        });
        // successModal.classList.remove("hidden");
      });

      closeSuccessModal.addEventListener("click", function () {
        successModal.classList.add("hidden");
      });
    </script>
  </body>
</html>
